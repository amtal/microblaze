{
  "pluginmetadataversion": 2,
  "name": "μBlaze Architecture Plugin",
  "type": [
    "architecture"
  ],
  "api": [
    "python3"
  ],
  "description": "Configurable soft core for Xilinx FPGAs.",
  "longdescription": "# μBlaze Architecture Plugin\n\n[MicroBlaze](https://en.wikipedia.org/wiki/MicroBlaze) is a configurable [soft processor](https://en.wikipedia.org/wiki/Soft_microprocessor) core from Xilinx going all the way back to their Spartan-II series of [FPGA](https://en.wikipedia.org/wiki/Field-programmable_gate_array)s. It can be found in a variety of roles within larger FPGA designs: from bare-bones microcontroller, to full Linux application processor, to early-boot [embedded controller](https://xilinx-wiki.atlassian.net/wiki/spaces/A/pages/18841724/PMU+Firmware).\n\n![Example Disassembly and HLIL](https://raw.githubusercontent.com/amtal/microblaze/master/img/header.gif)\n\n## Features\n\nThis plugin works on Linux binaries:\n\n* Relocations† for working Triage Summary imports!\n* Syscall arguments!‡\n* That one cursed ELF `e_machine` value that's no longer used!\n\nThis plugin supports bare-metal firmware:\n\n* Bus transfer and MSR intrinsics!\n* Intrinsics for privileged operations!\n* 64-bit instruction≠ extensions!\n\nMinor, unimportant quality of life things:\n\n* Nice disassembly of relative branches and 32-bit immediates!\n* Delay slots are properly lifted!\n* Disassemblesキ all configuration options in [UG984 (v2020.2)](https://www.xilinx.com/support/documentation/sw_manuals/xilinx2020_2/ug984-vivado-microblaze-ref.pdf) even the weird ones!\n\n## Usage\n\nAll ELF files should Just Work™ but otherwise:\n\n- Likely use `ublaze32be` architecture for older designs.\n- Likely use `ublaze32le` architecture for newer Zynq designs.\n- The `linux-ublaze32xx` default platforms aren't meaningfully different from `arch.standalone_platform`, you don't need to override them.\n- If HLIL looks broken, check source to see if that configuration option has been properly implemented yet.\n\nIf you want to cite this plugin please use:\n\n<pre>\n  @online{ublaze-arch-plugin,\n    title     = {{\\mu}Blaze Architecture Plugin for Binary Ninja},\n    url       = {https://github.com/amtal/microblaze},\n    author    = {amtal},\n    year      = 2021,\n  }\n</pre>\n\n## Caveats\n\n*† relocations not well-tested, probably buggy*\n\n*‡ minimum viable product, BYOSyscall typelib/headers*\n\n*≠ literally just the added 64-from-32 instructions, but 64-bit architecture variant should be trivial if anyone needs it now*\n\n*キbut definitely does not lift correctly, if someone has a clever cross-config validation plan lmk*\n",
  "license": {
    "name": "MIT",
    "text": "Copyright (c) 2021 amtal\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "platforms": [
    "Darwin",
    "Linux",
    "Windows"
  ],
  "installinstructions": {
    "Darwin": null,
    "Linux": null,
    "Windows": null
  },
  "dependencies": {
    "pip": [
    ]
  },
  "version": "0.0.1",
  "author": "Vector 35 Inc",
  "minimumbinaryninjaversion": 2800
}
